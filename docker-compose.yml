version: '3.8'

services:
  postgres:
    image: postgres:13-alpine
    container_name: postgres_db
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password123
      POSTGRES_DB: webhook_relay
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d webhook_relay"]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis_cache
    ports:
      - "6379:6379"
    restart: unless-stopped

  backend:
    container_name: algohire_backend
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "8000:8000"
    environment:
      DATABASE_URL: postgres://admin:password123@postgres_db:5432/webhook_relay
      REDIS_URL: redis://redis_cache:6379
      NODE_ENV: "development"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped

  backend-worker:
    container_name: algohire_backend_worker
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "postgres://admin:password123@postgres_db:5432/webhook_relay"
      REDIS_URL: "redis://redis_cache:6379"
      NODE_ENV: "development"
    depends_on:
      - postgres
      - redis
    volumes:
      - ./backend:/app
      - /app/node_modules
    restart: unless-stopped
    command: npm run start:worker

  migrator:
    container_name: algohire_migrator
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: "postgres://admin:password123@postgres_db:5432/webhook_relay"
    depends_on:
      - postgres
    command: "npm run migrate up"

  frontend:
    container_name: algohire_frontend
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:8000
      NEXT_PUBLIC_API_KEY: "fdsakhfdsjkhfewur202387fhdihweio3928"
    depends_on:
      - backend
    volumes:
      - ./frontend:/app
      - /app/node_modules
    restart: unless-stopped

volumes:
  postgres_data:
